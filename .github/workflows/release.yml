name: release

on:
  release:
    types: [published]
jobs:
  release_func:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x

    - name: Restore dependencies
      working-directory: src/FunctionApp1
      run: dotnet restore

    - name: Build
      working-directory: src/FunctionApp1
      run: dotnet build -c Release --no-restore

    - name: Publish
      working-directory: src/FunctionApp1/FunctionApp1/
      run: dotnet publish -c Release --self-contained --no-build

    - name: Packaging 
      shell: pwsh
      run: |
        Compress-Archive -Path ./src/FunctionApp1/FunctionApp1/bin/Release/netcoreapp3.1/publish/* -DestinationPath FunctionApp1.zip

    - name: Get Upload URL
      id: geturl
      shell: bash
      run: |
         upload_url=$(curl -sL https://api.github.com/repos/${{github.repository}}/releases -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' | jq -r '.[] | select(.tag_name == "${{github.event.release.tag_name}}") | .upload_url')
         echo ::set-output name=upload_url::$upload_url

    - name: Upload
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.geturl.outputs.upload_url }}
        asset_path: ./FunctionApp1.zip
        asset_name: FunctionApp1.zip
        asset_content_type: application/zip

  release_aspnet:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5
    
    - name: Restore Packages
      working-directory: src/WebApplication1/WebApplication1/
      run: nuget restore WebApplication1.sln

    - name: Build Solution
      working-directory: src/WebApplication1/WebApplication1/
      run: |
        msbuild.exe WebApplication1.csproj /p:DeployOnBuild=true /p:PublishProfile=.\Properties\PublishProfiles\FolderProfile.pubxml

    - name: Packaging 
      shell: pwsh
      run: |
        Compress-Archive -Path ./src/WebApplication1/WebApplication1/bin/app.publish/* -DestinationPath WebApplication1.zip

    - name: Get Upload URL
      id: geturl
      shell: bash
      run: |
         upload_url=$(curl -sL https://api.github.com/repos/${{github.repository}}/releases -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' | jq -r '.[] | select(.tag_name == "${{github.event.release.tag_name}}") | .upload_url')
         echo ::set-output name=upload_url::$upload_url

    - name: Upload
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.geturl.outputs.upload_url }}
        asset_path: ./WebApplication1.zip
        asset_name: WebApplication1.zip
        asset_content_type: application/zip
